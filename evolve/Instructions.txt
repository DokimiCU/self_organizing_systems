===============================================================
What is this?

This mod uses evolution to get a mining bot to choose the best autonomous mining strategy.

By default this bot digs for coal, and leaves coal blocks behind it, but it can be set to mine anything you like.


===============================================================
How do I use this?

In the settings choose what you want the bot to mine (or just leave it default if you want a coal miner).

Place the bot in an area where it's target is abundant i.e. in a cave for coal.

Click on the bot to open it's settings. Set one of the optional genomes:
- Random: will give a random genome (unlikely to be very fit)
- Default: a human designed genome
- Best: your best evolved genome (wont work until they've had a chance to evolve)
- Mate: will mate the current genome with the best genome (wont work until they've had a chance to evolve)
- Mutate: will randomly change one gene.

Exit to activate the bot. Allow it to mine. Punch the bot to pause it so you can check settings again without it running away.

The details of your best evolved genome can be seen using the Evolution Computer (wont work until they've had a chance to evolve).



===============================================================
How does this work?

For every situation the bot finds itself in, the bot looks at the block above, below, and one of its sides.
The bot then classes all blocks into four types:
- "Stone": things it is allowed to dig and destroy.
- Target: the thing it is mining.
- "Air": stuff it can move through it.
- Other: everything else.
(You can change the values for each of these in settings.)

This means the bot can be faced with 64 unique situations.
e.g. Stone below, Air above, Target to the side (coded SAT), or Air below, Other above, Stone side. (coded AOS)

The bot has a "gene" for each of these situations. For each gene it can have one of several "alleles" telling it what to do.
e.g. if SST then dig the side (allele coded DS), or if SAA then move below (allele coded MB).


All the bots are in a race. They have a short interval to gain as many points as possible.

Points are removed from the bot's fitness score each time the bot digs or moves. Likewise each time it digs the target it gains points.

When time is up the bot currently with the highest score gets its genome saved as the current winner.
If this current winner is the best scoring genome ever it is saved as the best ever winner.
Now the current winner and best ever winner are mated together. Each bot gets a new genome based on these pairings.
Then the race begins again.

This process mimics the natural selection that occurs in nature. It allows working strategies to develop from a beginning of total randomness.

As to the mining, once the bot has dug a certain number of its target it will deposit a block (e.g. a coal block from mining coal ore).



 ===============================================================
 Tips:

 Evolution can take a long time. Effective mining is actually a very difficult problem to solve.
 Ore is rare, and the bot can only look at the three blocks next door.
 Using random genomes starts out very ineffective. Flailing wildly is not a winning strategy. Have some patience!


 - It's best to put the bots in an area with lots of their target. Evolution is harder if the target is rare.


 - Occasionally bad genomes become top by sheer dumb luck, especially early on:

    - Purging helps get things unstuck. Remove the best genome by clicking "Purge Best Genome" in the Evolution computer. This will wipe the file, allowing it to begin again.

    - Sometimes a bot doesn't get reset as it should, and can accumulate score for longer than anyone else. Keep an eye out for unusually high scores (especially if they have an unusually low Generation # - they've not been updated).

    - Small populations are more affected by chance. The more bots the less chance.

    - Don't put new random bots in huge piles of the target. They will instantly become the best genome through the accident of their birth place.


 - The best genome is saved in "mod_evolve_best.data" in the "Worlds" folder for that map. You can fiddle with this file.

    - Really like this genome? Copy paste the data (or the whole file) to new maps.

    - Want to design your own genome? Change the values in this file for a custom "best ever" (caution not all genes should take all possible alleles e.g. you shouldn't move into a stone wall, or dig "other")

    - Things really can take a long time to evolve. I have left a few pre-evolved genomes below...


 ================================================================
 Cautions:

 - Bots can damage structures, if your structures are made from the target or digging medium!
   Be careful where you put them.

 - Bots will run away. They have minds of their own.
   Keep tabs on them if you don't want to lose them.

- Bots can get stuck in one situation: OOO - if all blocks around them are Other. e.g. they drowned themselves. You'll need to pull them out.



===============================================================
Some Key Genes (when on default settings at least):

Looking at these will help you understand the bot's behavior.
(Code order: Below/Above/Side)

Narrow Tunnels
 - ASS: Vertical tunnel top.
 - AAS: Vertical tunnel shaft.
 - SAS: Vertical tunnel bottom.
 - SSS: Side tunnel (has detected one of the solid sides).
 - SSA: Side tunnel (has detected the side passageway).

Open Areas:
 - SAA: Floor.
 - ASA: Roof.
 - AAS: Wall.
 - AAA: Mid-air.



===============================================================
For the Curious: The Difference between an "Intelligently Designed" Strategy and an Evolved Strategy

The default genome is one I came up with - a best guess of what would work - before I'd seen any evolved strategies.
I made sure it done things that seemed sensible, like always digging the target, digging down, moving down to the ground etc.
Unsurprisingly it preforms far better than a random strategy.

But what about versus an evolved genome?

Let's compare some key genes between my designed genome and an evolved one.

Here's my designed choices:
Narrow Tunnels
 - ASS: Vertical tunnel top.    = Move Below
 - AAS: Vertical tunnel shaft.  = Move Below
 - SAS: Vertical tunnel bottom. = Dig Below
 - SSS: Side tunnel.            = Dig Below
 - SSA: Side tunnel.            = Move Side
Open Areas:
 - SAA: Floor.                  = Move Side
 - ASA: Roof.                   = Move Below
 - AAS: Wall.                   = Move Below
 - AAA: Mid-air.                = Move Below

The result is a bot that tends to plunge downwards.


Here's an evolved strategy (after nine generations starting from random genomes):
Narrow Tunnels
 - ASS: Vertical tunnel top.    = Move Below
 - AAS: Vertical tunnel shaft.  = Move Above*
 - SAS: Vertical tunnel bottom. = Move Above*
 - SSS: Side tunnel.            = Dig Below
 - SSA: Side tunnel.            = Move Side
Open Areas:
 - SAA: Floor.                  = Dig Below*
 - ASA: Roof.                   = Move Below
 - AAS: Wall.                   = Move Above*
 - AAA: Mid-air.                = Move Above*

The evolved bot tends to go upwards. Deep underground this difference is not all that important.
Evolution has adapted it to local conditions (up and down are the same in the depths of the Earth).
In contrast I was doing something evolution can't - thinking long term (about reaching the surface where up and down suddenly become very different.)

However the Evolved strategy does some things that possibly make it better than my design.
It engages in "pumping" at the tops and bottoms of shafts. It moves back and forth at shaft's end, rather than always extending it.
The "Pumping" technique gives the bot a better chance of noticing any targets on the tunnel walls (it can only look at one wall at a time).
In contrast my bot always digs at the bottom of the shaft, sending it shooting down, often straight past targets.

Another way to compare design versus evolution is to let my designed genome evolve.
What genes does evolution change?

Some changes are possibly equivalent (e.g. SSO: DB evolved to DA, but digging up or down might not be too different).
Other changes are more interesting.

It also seems to have evolved "pumping", but only when an "Other" is on one side (SAO: DB to MA, OAS: DS to MA.)
Perhaps this is an indicator ore is nearby (as non-target ores are a common "other" that turns up near the target), or perhaps this helps trade off "pumping" and tunneling?

It also evolved to stop immediately digging the target when in side tunnels. Instead it digs around it
(SST: DS to DA, STS: DA to DB, STT: DA to DB). This likely helps it discover other hidden targets in the loosely clustered groups of ore.

It is all these kinds of non-obvious solutions that evolution is very good at finding - no intelligence required.



===============================================================
For the Curious: Different Problems, Different Solutions

The Bot can be set to solve challenges very different than mining coal. Does it evolve different strategies to solve these novel problems?

Tree harvesting poses unique challenges that coal mining does not:
 - the target exists in a narrow band: bots going up risk disappearing into the sky never to return.
 - the target is always the same shape and in a certain position: a pillar on top of "Other".

 Therefore some crucial genes are:
- AAA: mid-air. MA is a lethal gene (launches it into space).
- OAA: the ground.
- OAT: on the ground, near the target e.g. at the base of a tree.
- TTA: in the middle of a tree trunk.
- TAA/ATA: occurs in the middle of trunks after having harvested part of it.

The Pumping Coal miner set these genes as:
- AAA: MA
- OAA: MA
- OAT: MA
- TTA: DB
- TAA: DB
- ATA: MS
The first two genes are disasters for tree harvesting (up into space it goes!). The others may or may not be useful.

A Bot evolved for Tree harvesting set these genes as:
- AAA: MS
- OAA: MS
- OAT: DS
- TTA: DA
- TAA: MS
- ATA: DA
This bot hadn't quite cracked the trick of finding trees, climbing them and felling the whole thing. But it was good at cutting them all off at the knees.
It developed a lot of sideways movement, allowing it run along the ground, running into new trees, and hacking bits off them.
And it avoided the lethal mistake of just going up... and up... and away!


Even subtle changes to the challenge may require a new strategy. Can evolution figure out these fine distinctions?

I created two variations of a "mountain building" challenge. The Bot harvests air, deposits stone, and moves through stone (essentially it creates a mountain in which it lives)
In the first variant the bot could dig stone (let's call it "Stoner"). In the second variant the bot could dig dirt ("Dirter").

This leads to two big differences in the challenge:
- Bots are rewarded for accessing air. Stoner has the option of solving this by digging. Dirter mostly has to solve this by moving.
- Bots can get lost inside the earth where there is no air:
    - The Stoner can't penetrate soil, so seldom reaches the earth, and it can dig creating new air pockets. The risk is low.
    - The Dirter can easily get lost. It removes the soil, joining it's mountain to the earth. Getting lost is lethal. The risk is high.

How does evolution deal with this?

Both genomes started from random. They evolved many similarities and differences.

Roughly half the genes worked out the same. Probably they are being used to similar effect.
 e.g. SAA: entombed at ground level (or anywhere for Stoner). Both dug below, exposing air.

For the other half that are different? It is difficult to tell why they vary.

This is such a complex non-intuitive design problem it's hard to say what is going on.
For Stoner S=A, but the genes for A and S evolve differently (A can never be dug, S never moved into). This means Stoner has multiple genes for each situation, allowing one hell of a complicated strategy to evolve.
Plus for both Bots, successfully finding the Target rapidly feeds back on their ability to find the target again in the near future, in both positive and negative ways. Humanly designing these strategies would be... difficult.

Some of the differences between the bots may be equivalent solutions differing by chance. Others are clearly adaptations.
Dirter did avoid the risk of getting lost for example.
 e.g. AAA: entombed. Dirter had MS, Stoner MB. This is a risky situation for Dirter. MB would send it deep underground. MS takes it to the side of its mountain (or a cave, or cliff if it's underground).

So, despite the subtly different challenges the Bot evolved similar but distinct strategies - and for problems that are not at all obvious to see how they should be solved.



===============================================================
Credits:
Computer node from Computers by Diego Martínez




===============================================================
Some Pre-evolved Genomes:
- Overwrite the data in mod_evolve_best.data with these genomes if you want to save some time.

The "Pumping" Genome:

return {["SSA"] = "MS", ["OAO"] = "MA", ["TSA"] = "MS", ["SAO"] = "MA", ["TAO"] = "DB", ["AOT"] = "MB", ["OOT"] = "DS", ["OOO"] = "NA", ["ASA"] = "MB", ["STO"] = "DB", ["TTO"] = "DB", ["OSA"] = "MS", ["SSS"] = "DB", ["TOO"] = "DB", ["TSS"] = "DA", ["STT"] = "DB", ["SOO"] = "DB", ["score"] = 43, ["OOA"] = "MS", ["TTT"] = "DA", ["TTS"] = "DA", ["TST"] = "DA", ["ATT"] = "DS", ["STS"] = "DB", ["OSS"] = "DA", ["OTT"] = "DA", ["SST"] = "DS", ["AST"] = "DS", ["OAS"] = "DS", ["SAS"] = "MA", ["TOA"] = "DB", ["TAS"] = "MA", ["OST"] = "DS", ["OTA"] = "DA", ["ATA"] = "MS", ["OTS"] = "DS", ["OOS"] = "DS", ["AAA"] = "MA", ["TOT"] = "DS", ["SOT"] = "DB", ["AOS"] = "MB", ["TSO"] = "DB", ["SSO"] = "DA", ["OAA"] = "MA", ["SAA"] = "DB", ["ASS"] = "MB", ["OTO"] = "DA", ["AOO"] = "MB", ["ATO"] = "DA", ["TOS"] = "DS", ["SOS"] = "DB", ["TAA"] = "DB", ["AOA"] = "MB", ["ATS"] = "DA", ["OAT"] = "MA", ["SOA"] = "MS", ["AAS"] = "MA", ["ASO"] = "DA", ["AAO"] = "MA", ["TTA"] = "DB", ["AAT"] = "DS", ["TAT"] = "DS", ["STA"] = "DA", ["paused"] = "active", ["generation"] = 9, ["inv_score"] = 7, ["SAT"] = "DB", ["OSO"] = "DA"}



The evolved default genome:

return {["SSA"] = "MS", ["OAO"] = "MA", ["TSA"] = "DB", ["SAO"] = "MA", ["TAO"] = "DB", ["AOT"] = "DS", ["OOT"] = "DS", ["OOO"] = "NA", ["ASA"] = "MB", ["STO"] = "DA", ["TTO"] = "DB", ["OSA"] = "MS", ["SSS"] = "DB", ["TOO"] = "DB", ["TSS"] = "DB", ["STT"] = "DB", ["SOO"] = "DB", ["score"] = 50, ["OOA"] = "MS", ["TTT"] = "DS", ["TTS"] = "DA", ["TST"] = "DA", ["ATT"] = "DS", ["STS"] = "DB", ["OSS"] = "DS", ["OTT"] = "DS", ["SST"] = "DA", ["AST"] = "DS", ["OAS"] = "MA", ["SAS"] = "DB", ["TOA"] = "DB", ["TAS"] = "DB", ["OST"] = "DS", ["OTA"] = "DA", ["ATA"] = "DA", ["OTS"] = "DA", ["OOS"] = "DS", ["AAA"] = "MA", ["TOT"] = "DS", ["SOT"] = "DS", ["AOS"] = "MB", ["TSO"] = "DB", ["SSO"] = "DA", ["OAA"] = "MS", ["SAA"] = "MS", ["ASS"] = "MB", ["OTO"] = "DA", ["AOO"] = "MB", ["ATO"] = "DA", ["TOS"] = "DB", ["SOS"] = "DB", ["TAA"] = "MA", ["AOA"] = "MB", ["ATS"] = "DA", ["OAT"] = "DS", ["SOA"] = "DB", ["AAS"] = "MB", ["ASO"] = "MB", ["AAO"] = "MB", ["TTA"] = "DA", ["AAT"] = "DS", ["TAT"] = "DB", ["STA"] = "DA", ["paused"] = "active", ["generation"] = 3, ["inv_score"] = 4, ["SAT"] = "DS", ["OSO"] = "DA"}



A tree harvesting adapted genome:

return {["SSA"] = "MS", ["OAO"] = "MA", ["TSA"] = "DA", ["SAO"] = "DB", ["TAO"] = "MA", ["AOT"] = "MB", ["OOT"] = "DS", ["OOO"] = "NA", ["ASA"] = "DA", ["STO"] = "DA", ["TTO"] = "DB", ["OSA"] = "DA", ["SSS"] = "DB", ["TOO"] = "DB", ["TSS"] = "DB", ["STT"] = "DA", ["SOO"] = "DB", ["score"] = 36, ["OOA"] = "MS", ["TTT"] = "DS", ["TTS"] = "DA", ["TST"] = "DA", ["ATT"] = "DS", ["STS"] = "DA", ["OSS"] = "DS", ["OTT"] = "DA", ["SST"] = "DS", ["AST"] = "DS", ["OAS"] = "MA", ["SAS"] = "DB", ["TOA"] = "DB", ["TAS"] = "DS", ["OST"] = "DS", ["OTA"] = "DA", ["ATA"] = "DA", ["OTS"] = "DA", ["OOS"] = "DS", ["AAA"] = "MS", ["TOT"] = "DB", ["SOT"] = "DB", ["AOS"] = "MB", ["TSO"] = "DA", ["SSO"] = "DB", ["OAA"] = "MS", ["SAA"] = "DB", ["ASS"] = "DA", ["OTO"] = "DA", ["AOO"] = "MB", ["ATO"] = "DA", ["TOS"] = "DS", ["SOS"] = "DB", ["TAA"] = "MS", ["AOA"] = "MS", ["ATS"] = "DA", ["OAT"] = "DS", ["SOA"] = "MS", ["AAS"] = "MB", ["ASO"] = "DA", ["AAO"] = "MA", ["TTA"] = "DA", ["AAT"] = "MB", ["TAT"] = "DS", ["STA"] = "MS", ["paused"] = "active", ["generation"] = 4, ["inv_score"] = 2, ["SAT"] = "DS", ["OSO"] = "DA"}



Stoner Mountain Builder Genome (For: Targets = air; Dig, moves, and deposits = stone):

return {["SSA"] = "DB", ["OAO"] = "MA", ["TSA"] = "DB", ["SAO"] = "DB", ["TAO"] = "DB", ["AOT"] = "DS", ["OOT"] = "DS", ["OOO"] = "NA", ["ASA"] = "MB", ["STO"] = "DB", ["TTO"] = "DB", ["OSA"] = "DA", ["SSS"] = "DS", ["TOO"] = "DB", ["TSS"] = "DS", ["STT"] = "DA", ["SOO"] = "DB", ["scorepaused"] = "active", ["generation"] = 10, ["inv_score"] = 0, ["SAT"] = "MA", ["OSO"] = "DA"}



Dirter Mountain Builder Genome (For: Targets = air; Moves, and deposits = stone. Digs = soil):

return {["SSA"] = "DB", ["OAO"] = "MA", ["TSA"] = "DA", ["SAO"] = "DB", ["TAO"] = "DB", ["AOT"] = "MB", ["OOT"] = "DS", ["OOO"] = "NA", ["ASA"] = "MS", ["STO"] = "DA", ["TTO"] = "DB", ["OSA"] = "MS", ["SSS"] = "DB", ["TOO"] = "DB", ["TSS"] = "DB", ["STT"] = "DB", ["SOO"] = "DB", ["score"] = 1113, ["OOA"] = "MS", ["TTT"] = "DB", ["TTS"] = "DB", ["TST"] = "DS", ["ATT"] = "DA", ["STS"] = "DS", ["OSS"] = "DS", ["OTT"] = "DS", ["SST"] = "DS", ["AST"] = "DA", ["OAS"] = "MA", ["SAS"] = "MA", ["TOA"] = "MS", ["TAS"] = "DS", ["OST"] = "DS", ["OTA"] = "MS", ["ATA"] = "DA", ["OTS"] = "DS", ["OOS"] = "DS", ["AAA"] = "MS", ["TOT"] = "DB", ["SOT"] = "DB", ["AOS"] = "MB", ["TSO"] = "DB", ["SSO"] = "DA", ["OAA"] = "MS", ["SAA"] = "DB", ["ASS"] = "MB", ["OTO"] = "DA", ["AOO"] = "MB", ["ATO"] = "DA", ["TOS"] = "DB", ["SOS"] = "DB", ["TAA"] = "DB", ["AOA"] = "MS", ["ATS"] = "MB", ["OAT"] = "MA", ["SOA"] = "DB", ["AAS"] = "MA", ["ASO"] = "MB", ["AAO"] = "MA", ["TTA"] = "DA", ["AAT"] = "MB", ["TAT"] = "MA", ["STA"] = "MS", ["paused"] = "active", ["generation"] = 7, ["inv_score"] = 1, ["SAT"] = "MA", ["OSO"] = "DA"}




===============================================================
Your Genomes:
- save some of your own genomes here with descriptions if you like...
